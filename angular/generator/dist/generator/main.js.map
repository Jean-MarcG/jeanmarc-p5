{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/utils.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component} from '@angular/core';\nimport {getRandomPart} from \"../utils\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'generators';\n  citations: Array<Object> = [];\n\n  generators = {\n    generator1: {\n      part1: [\"G1part1.1\", \"G1part1.2\", \"G1part1.3\"],\n      part2: [\"G1part2.1\", \"G1part2.2\", \"G1part2.3\"],\n      part3: [\"G1part3.1\", \"G1part3.2\", \"G1part3.3\"],\n    },\n    generator2: {\n      part1: [\"G2part1.1\", \"G2part1.2\", \"G2part1.3\"],\n      part2: [\"G2part2.1\", \"G2part2.2\", \"G2part2.3\"],\n      part3: [\"G2part3.1\", \"G2part3.2\", \"G2part3.3\"],\n    }\n  };\n\n  submit(e) {\n    e.preventDefault()\n    const generator = e.target.categorie.value\n    const nbCitations = parseInt(e.target.nbCitations.value)\n    this.citations = [];\n    for (let i = 0; i < nbCitations; i++) {\n      const citation = {\n        value: `${getRandomPart(this.generators, generator, 'part1')} ${getRandomPart(this.generators, generator, 'part2')} ${getRandomPart(this.generators, generator, 'part3')}`\n      };\n      this.citations.push(citation);\n    }\n  }\n}\n","<h1>Générateur</h1>\n\n\n<form\n  name=\"form\"\n  (submit)=\"submit($event)\"\n>\n  <div class=\"row\">\n    <div class=\"col-lg-6 col-md-12 radios\" style=\"text-align: center; margin-bottom: 5px;\">\n      <div class=\"radio\">\n        <input type=\"radio\" name=\"categorie\" value=\"generator1\" id=\"type1\">\n        <label for=\"type1\">type1</label>\n      </div>\n      <div class=\"radio\">\n        <input type=\"radio\" name=\"categorie\" value=\"generator2\" id=\"type2\">\n        <label for=\"type2\">type2</label>\n      </div>\n    </div>\n  </div>\n  <br>\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-12 radios\" style=\"text-align: center; margin-bottom: 5px;\">\n      <div class=\"radio\">\n        <input type=\"radio\" name=\"nbCitations\" value=\"1\" id=\"1\">\n        <label for=\"1\">Un</label>\n      </div>\n      <div class=\"radio\">\n        <input type=\"radio\" name=\"nbCitations\" value=\"2\" id=\"2\">\n        <label for=\"2\">Deux</label>\n      </div>\n      <div class=\"radio\">\n        <input type=\"radio\" name=\"nbCitations\" value=\"3\" id=\"3\">\n        <label for=\"3\">Trois</label>\n      </div>\n      <div class=\"radio\">\n        <input type=\"radio\" name=\"nbCitations\" value=\"4\" id=\"4\">\n        <label for=\"4\">Quatre</label>\n      </div>\n      <div class=\"radio\">\n        <input type=\"radio\" name=\"nbCitations\" value=\"5\" id=\"5\">\n        <label for=\"5\">Cinq</label>\n      </div>\n    </div>\n\n    <button id=\"generate\">Générer</button>\n\n    <ul>\n      <li *ngFor=\"let citation of citations\">\n        {{citation.value}}\n      </li>\n    </ul>\n\n  </div>\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function getRandomPart(generators: Object, categorie: string, key: string): string {\n  const max = generators[categorie][key].length;\n  const idx = Math.floor(Math.random() * (max - 0));\n  return generators[categorie][key][idx];\n}\n\nexport {getRandomPart}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}